apiVersion: apps/v1  
kind: Deployment
metadata:
  name: nginx-deployment
  labels:
    release: nginx-deployment-test

spec:
  selector:
    matchLabels:
      release: nginx-test
  replicas: 3     

  template: 
      metadata:
        name: nginx-pod
        labels:
          release: nginx-test

      spec:
          containers:
          - name: nginx
            image: mirrors.tencent.com/capd/capdqa/nginx
            ports:
            - containerPort: 80
            volumeMounts:
            - name: app-logs
              mountPath: /var/log/nginx
            - name: nginx-default-config
              mountPath: /etc/nginx
            restartPolicy: Always
            livenessProbe: # 如果探测不健康，则会杀掉容器
              httpGet:
                path: /
                port: 80
              initialDelaySeconds: 30 # 容器启动后首次检查等待时间
              timeoutSeconds: 1

          - name: busybox
            image: mirrors.tencent.com/capd/capdqa/busybox
            command: ['sh', "-c", "tail -f /logs/*.log"]
            volumeMounts:
              - name: app-logs
                mountPath: /logs 
            restartPolicy: Always

          volumes:
          - name: app-logs
            emptyDir: {}
          - name: nginx-default-config
            configMap:
              name: nginx-conf
              items:
                - key: default-conf
                  path: nginx.conf



# configMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  default-conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log;
    pid /run/nginx.pid;

    include /usr/share/nginx/modules/*.conf;

    events {
        worker_connections 1024;
    }

    http {
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log  main;

        sendfile            on;
        tcp_nopush          on;
        tcp_nodelay         on;
        keepalive_timeout   65;
        types_hash_max_size 2048;

        default_type        application/octet-stream;

        include /etc/nginx/conf.d/*.conf;

        server {
            listen       80 default_server;
            listen       [::]:80 default_server;
            server_name  _;
            root         /usr/share/nginx/html;

            include /etc/nginx/default.d/*.conf;

            location / {
            }

            error_page 404 /404.html;
                location = /40x.html {
            }

            error_page 500 502 503 504 /50x.html;
                location = /50x.html {
            }
        }
    }



# service
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  ports:
  - port: 8080
    targetPort: 80
  selector:
    release: nginx-test
